rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Rule for users collection - allow users to create and manage their own user documents
    match /users/{userId} {
      // Allow users to read and write only their own data
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Special case for user creation during registration
      allow create: if request.auth != null && request.auth.uid == userId;
    }
    
    // Rule for medicalRecords collection
    match /medicalRecords/{recordId} {
      // Allow read if user ID matches (for both existing and new documents)
      allow read: if request.auth != null && 
                   (resource == null || request.auth.uid == resource.data.userId);
      
      // Allow create if user is setting their own userId
      allow create: if request.auth != null && 
                     request.auth.uid == request.resource.data.userId;
      
      // Allow update/delete if user owns the document
      allow update, delete: if request.auth != null && 
                            request.auth.uid == resource.data.userId;
    }

    // Rule for familyMembers collection
    match /familyMembers/{memberId} {
      // Allow read if user ID matches (for both existing and new documents)
      allow read: if request.auth != null && 
                   (resource == null || request.auth.uid == resource.data.userId);
      
      // Allow create if user is setting their own userId
      allow create: if request.auth != null && 
                     request.auth.uid == request.resource.data.userId;
      
      // Allow update/delete if user owns the document
      allow update, delete: if request.auth != null && 
                            request.auth.uid == resource.data.userId;
    }

    // Rule for appointments collection
    match /appointments/{appointmentId} {
      // Allow read if user ID matches (for both existing and new documents)
      allow read: if request.auth != null && 
                   (resource == null || request.auth.uid == resource.data.userId);
      
      // Allow create if user is setting their own userId
      allow create: if request.auth != null && 
                     request.auth.uid == request.resource.data.userId;
      
      // Allow update/delete if user owns the document
      allow update, delete: if request.auth != null && 
                            request.auth.uid == resource.data.userId;
    }

    // Rule for insurance collection
    match /insurance/{insuranceId} {
      // Allow read if user ID matches (for both existing and new documents)
      allow read: if request.auth != null && 
                   (resource == null || request.auth.uid == resource.data.userId);
      
      // Allow create if user is setting their own userId
      allow create: if request.auth != null && 
                     request.auth.uid == request.resource.data.userId;
      
      // Allow update/delete if user owns the document
      allow update, delete: if request.auth != null && 
                            request.auth.uid == resource.data.userId;
    }

    // Rule for test documents (used in diagnostics)
    match /test/{testId} {
      allow read, write: if request.auth != null;
    }
  }
}
